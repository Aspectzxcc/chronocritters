enum CritterType {
    FIRE
    WATER
    GRASS
    ELECTRIC
    METAL
}

enum AbilityType {
    ATTACK
    DEFENSE
    HEAL
}

type Ability {
    id: ID
    name: String
    power: Int
    type: AbilityType
}

type BaseStats {
    health: Int
    attack: Int
    defense: Int
}

type Critter {
    id: ID
    name: String
    type: CritterType
    baseStats: BaseStats
    abilities: [Ability]
}

type PlayerStats {
    wins: Int
    losses: Int
}

type Player {
    id: ID
    username: String
    password: String
    stats: PlayerStats
    roster: [Critter]
}

type User {
    id: ID!
    username: String!
}

type LoginResponse {
    user: User!
    token: String!
}

type Query {
    getPlayer(id: ID!): Player
}

type Mutation {
    register(username: String!, password: String!): LoginResponse
    login(username: String!, password: String!): LoginResponse
}